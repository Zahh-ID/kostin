name: CI

on:
  push:
    branches: ["main", "develop"]
  pull_request:
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        ports: ['3306:3306']
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: kostin_test
          MYSQL_USER: kostin
          MYSQL_PASSWORD: secret
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 -ukostin -psecret"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          coverage: none
          extensions: mbstring, intl, pdo_mysql, bcmath, gd
          ini-values: post_max_size=256M, memory_limit=1G

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Cache composer dependencies
        uses: actions/cache@v4
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install composer dependencies
        run: composer install --no-interaction --prefer-dist

      - name: Copy environment file
        run: cp .env.ci .env

      - name: Generate application key
        run: php artisan key:generate

      - name: Run database migrations
        env:
          DB_CONNECTION: mysql
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
          DB_DATABASE: kostin_test
          DB_USERNAME: kostin
          DB_PASSWORD: secret
        run: php artisan migrate --force

      - name: Run tests
        env:
          DB_CONNECTION: mysql
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
          DB_DATABASE: kostin_test
          DB_USERNAME: kostin
          DB_PASSWORD: secret
        run: php artisan test

      - name: Cache npm dependencies
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('package-lock.json') }}
          restore-keys: ${{ runner.os }}-npm-

      - name: Install frontend dependencies
        run: npm ci --ignore-scripts

      - name: Build assets
        run: npm run build --if-present
